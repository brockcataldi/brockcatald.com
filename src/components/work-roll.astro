---
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';

const posts = (await getCollection('work')).sort(
	(a, b) => b.data.datePublish.valueOf() - a.data.datePublish.valueOf()
);
---

<ul>
	{
		posts.map((post) => (
			<li>
				<a href={`/work/${post.id}/`}>
					<span>{post.data.type}</span>
					<Image
						src={post.data.imageListing}
						alt={post.data.title}
						inferSize={true}
						loading={'eager'}
					/>
					<div>
						<h3 class="title">{post.data.title}</h3>
						<p>{post.data.description}</p>
					</div>
				</a>
			</li>
		))
	}
</ul>
<style>
	ul {
		margin: 0;
		padding: 0;
		list-style-type: none;
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(318px, 490px));
		gap: var(--space-m);
	}

	li {
		height: 100%;
	}

	a {
		display: grid;
		grid-template-rows: 318px 1fr;
		border-radius: var(--space-m);
		overflow: hidden;
		border: 1px solid transparent;
		color: var(--neutrals-1200);
		height: 100%;
		position: relative;
		transition:
			200ms border-color ease-in-out,
			200ms color ease-in-out;
	}

	span {
		display: block;
		position: absolute;
		border-radius: var(--space-m);
		padding: var(--space-3xs) var(--space-xs);
		top: var(--space-s);
		left: var(--space-s);
		background-color: var(--neutrals-100);
		font-size: var(--step--1);
		border: 1px solid transparent;
		transition:
			200ms border-color ease-in-out,
			200ms color ease-in-out,
			200ms background-color ease-in-out;
	}

	a:hover,
	a:focus {
		color: var(--oranges-1100);
		border-color: var(--oranges-1100);
	}

	a:hover div,
	a:focus div {
		border-color: var(--oranges-1100);
		background-color: var(--oranges-100);
	}

	a:hover span,
	a:focus span {
		border-color: var(--oranges-1100);
		background-color: var(--oranges-100);
	}

	img {
		width: 100%;
		height: 318px;
		object-position: center;
		object-fit: cover;
	}

	div {
		background-color: var(--neutrals-100);
		padding: var(--space-m);
		border-top: 1px solid transparent;
		display: flex;
		flex-direction: column;
		align-items: flex-start;
		justify-content: flex-start;
		gap: var(--space-2xs);
		transition:
			200ms border-color ease-in-out,
			200ms background-color ease-in-out;
	}

	h3 {
		margin: 0;
		font-size: var(--step-3);
	}

	p {
		margin: 0;
		text-overflow: ellipsis;
	}
</style>
