---
import FormattedDate from './FormattedDate.astro';

interface Props {
	href: string;
	title: string;
	description: string;
	publishDate: Date;
}

const { href, title, description, publishDate } = Astro.props;

import CalendarIcon from '../assets/calendar.svg';
import ClockIcon from '../assets/clock.svg';
---

<a href={href}>
	<h3 class="title">{title}</h3>
	<p>{description}</p>

	<ul>
		<li>
			<CalendarIcon />
			<p>
				<FormattedDate date={publishDate} />
			</p>
		</li>
		<li>
			<ClockIcon />
			<p>30 min</p>
		</li>
	</ul>
</a>

<style>
	h3 {
		font-size: var(--step-3);
	}

	h3,
	p {
		margin: 0;
	}

	a {
		padding: var(--space-m);
		width: 100%;
		box-sizing: border-box;
		color: white;
		display: flex;
		flex-direction: column;
		gap: var(--space-xs);
		border-radius: var(--space-s);
		background-color: var(--neutrals-100);
		border: 1px solid transparent;
		transition:
			200ms border-color ease-in-out,
			200ms color ease-in-out,
			200ms background-color ease-in-out;
	}

	ul {
		margin: 0;
		padding: 0;
		list-style-type: none;
		display: flex;
		align-items: center;
		justify-content: flex-start;
		flex-direction: row;
		gap: var(--space-s);
	}

	li {
		margin: 0;
		width: fit-content;
		display: flex;
		align-items: center;
		justify-content: flex-start;
		flex-direction: row;
		gap: var(--space-2xs);
		box-sizing: border-box;
		padding: var(--space-3xs) var(--space-s);
		background-color: var(--neutrals-200);
		border-radius: var(--space-m);
		line-height: 1;
		border: 1px solid var(--neutrals-200);
		transition:
			200ms border-color ease-in-out,
			200ms color ease-in-out,
			200ms background-color ease-in-out;
	}

	li p {
		width: fit-content;
		font-size: var(--step--1);
	}

	svg {
		width: 16px;
		height: auto;
	}

	a:after {
		content: none;
	}

	a:hover,
	a:focus {
		border-color: var(--oranges-1100);
		background-color: var(--oranges-100);
		color: var(--oranges-1100);
	}

	a:hover li,
	a:focus li {
		border-color: var(--oranges-1100);
		background-color: var(--oranges-200);
	}
</style>
